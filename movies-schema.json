{

  name: "Movies",

  keep: false,

  tables: {

    actor: {
      handle: hE4F1,

      columns: {
        id:   {handle: hA282, type: id64, nullable: false, modifiable: false, default: =id64},
        name: {handle: hE178, type: string, nullable: false}},

      keys: {
        id: {handle: hE29E, columns: [id]}}},

    movie: {
      handle: h7D46,

      columns: {
        id: {handle: h3E43, type: id64, nullable: false, modifiable: false, default: =id64},
        title: {handle: hABB8, type: string, nullable: false}},

      keys: {
        id: {handle: hBC09, columns: [id]}}},

    cast: {
      handle: h7606,

      columns: {
        actor: {handle: h0310, type: actor, nullable: false},
        movie:  {handle: h85AA, type: movie, nullable: false},
        role:   {handle: h20AA, type: string, nullable: false}},

      keys: {
        id: {handle: hFD81, columns: [actor, movie]}}},

    user: {
      handle: user,

      columns: {
        id: {handle: id, type: user.identity, nullable: false, modifiable: false},
        email: {handle: email, type: string},
        firstName: {handle: firstName, type: string},
        lastName: {handle: lastName, type: string},
        isEditor: {handle: h5C8C, type: boolean, nullable: false, default: true}},

      keys: {
        id: {handle: id, columns: [id]}}}},

  documents: {

    actorDetail:
      "with actor {
        id: id;
        name: name;
        roles: [
          cast on actor by id
          resolve movie by id {
            movieId: movie.id;
            title: movie.title;
            role: role;
          }]; }",

    actorKey:
      "with actor {
        id: id;
      }",

    actorTerms:
      "(F413) with actor {
        name: name;
      }",

    actorSummary:
      "with actor {
        id: id;
        name: name;
      }",

    movieDetail:
      "with movie {
        id: id;
        title: title;
        cast: [
          cast on movie by id
          resolve actor by id {
            actorId: actor.id;
            name: actor.name;
            role: role;
          }]; }",

    movieKey:
      "with movie {
        id: id;
      }",

    movieTerms:
      "(CA60) with movie {
        title: title;
      }",

    movieSummary:
      "with movie {
        id: id;
        title: title;
      }",

    userDetail:
      "with user {
        id: id;
        email: email;
        firstName: firstName;
        lastName: lastName;
        isEditor: isEditor;
      }",

    userKey:
      "with user {
        id: id;
      }",

    userTerms:
      "(CA38) with user {
        email: email;
        firstName: firstName;
        lastName: lastName;
        isEditor: isEditor;
      }"
  },

  hosts: {

    movies.store.localhost: {

      write: "user.isEditor",

      trust: {
        facebook: ["173056026179982"],
        google: ["1068154921504.apps.googleusercontent.com"]
      },

      resources: [

        { prefix: "/movie",
          table: movie,
          document: movieDetail,
          key: {name: id, document: movieKey, template: "/<id>"},
          get: {},
          search: {
            categories: {
              movies: {terms: movieTerms, result: movieSummary}}},
          post: {},
          put: {},
          delete: {}
        },

        { prefix: "/actor",
          table: actor,
          document: actorDetail,
          key: {name: id, document: actorKey, template: "/<id>"},
          get: {},
          search: {
            categories: {
              actors: {terms: actorTerms, result: actorSummary}}},
          post: {},
          put: {},
          delete: {}
        },

        { prefix: "/search",
          search: {
            categories: {
              actors: {terms: actorTerms, result: actorSummary},
              movies: {terms: movieTerms, result: movieSummary}}}},

        { prefix: "/user",
          table: user,
          document: userDetail,
          key: {name: id, document: userKey, template: "/<id>", pattern: "/(?<id>.+)$"},
          allow: "user.isEditor",
          get: {},
          getme: {},
          search: {
            categories: {
              users: {terms: userTerms, result: userDetail}}},
          put: {},
          deleteme: {}
        }
      ]}
  }}

